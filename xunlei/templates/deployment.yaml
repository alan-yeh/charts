apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "global.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "global.labels" . | nindent 4 }}
spec:
  {{- if .Values.maintenance }}
  replicas: 0
  {{- else }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      {{- include "global.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "global.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: xunlei
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 2345
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          startupProbe:
            httpGet:
              port: http
              path: /webman/3rdparty/pan-xunlei-com/index.cgi/device/now
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 20
          livenessProbe:
            httpGet:
              port: http
              path: /webman/3rdparty/pan-xunlei-com/index.cgi/device/now
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: data-volume
              mountPath: /xunlei/data
              subPath: data
            - name: data-volume
              mountPath: /xunlei/downloads
              subPath: downloads
          securityContext:
            privileged: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else }}
      affinity:
        # 让 Pod 只调度到对应命名空间的节点上，保证生产环境和预发布环境节点隔离
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node.kubernetes.io/namespace
                    operator: In
                    values: [{{ .Release.Namespace | quote }}]
      {{- end }}
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: {{ include "global.name" . }}