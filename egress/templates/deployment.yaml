apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "global.name" . }}
  labels:
    {{- include "global.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.autoscaling.minReplicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "global.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "global.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            # 根据顺序从 8080 开始依次分配端口
            {{- range $index, $val := .Values.routers }}
            - name: {{ $val.name }}-port
              containerPort: {{ add 8080 $index }}
              protocol: TCP
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else }}
      affinity:
        # 让副本分布到不同的节点上，避免单点故障
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: "app.kubernetes.io/name"
                      operator: In
                      values: [{{ include "global.name" . | quote }}]
                    - key: "app.kubernetes.io/instance"
                      operator: In
                      values: [{{ .Release.Name | quote }}]
      {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "global.name" . }}