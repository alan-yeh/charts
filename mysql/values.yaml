####################################################################
# 全局配置
####################################################################
# 维护状态
# 当进入维护状态时，hpa 将会失效，所有的 Deployment 和 StatefulSet 的 replicas 将被设置 0
maintenance: false

# 存储配置
pvc:
  storageClassName: permanent
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi

####################################################################
# MySql
# 目前只支持单实例
####################################################################
mysql:
  # 仓库配置
  image:
    repository: mysql
    tag:
    pullPolicy: Always
  # 应用资源限制
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
  # MySql 配置
  config:
    # root 用户的密码
    password: <password>
  # 节点选择器
  nodeSelector: {}
  # 污点容忍度
  tolerations: []
  # 亲和性
  # 如果为空时，默认的亲和性规则如下:
  # 1. 必须将应用调度到与当前命名空间相同的节点上，保证生产环境和预发布环境节点隔离（节点需要提前打上标签 node.kubernetes.io/namespace=<namespace>）
  # 如果不为空时，以用户的亲和性为准
  affinity: {}
  # MySql 配置文件
  # 以下配置文件会被挂载到 /etc/mysql/conf.d 目录
  cnf:
    docker.cnf: |
      [mysqld]
      skip-host-cache
      skip-name-resolve
      lower_case_table_names=1
    mysql.cnf: |
      [mysql]
    mysqldump.cnf: |
      [mysqldump]
      quick
      quote-names
      max_allowed_packet = 16M

####################################################################
# CloudBeaver
####################################################################
cloudbeaver:
  enabled: true
  image:
    repository: dbeaver/cloudbeaver
    tag: 23.2.0
    pullPolicy: Always
  # 应用资源限制
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
  # 节点选择器
  nodeSelector: {}
  # 污点容忍度
  tolerations: []
  # 亲和性
  # 如果为空时，默认的亲和性规则如下:
  # 1. 必须将应用调度到与当前命名空间相同的节点上，保证生产环境和预发布环境节点隔离（节点需要提前打上标签 node.kubernetes.io/namespace=<namespace>）
  # 如果不为空时，以用户的亲和性为准
  affinity: {}
  ingress:
    className: "nginx"
    # 部署后，如果未指定 host，则 MySQL 默认监听 <release-name>.<namespace>.cluster.k8s
    #host: mysql.cluster.k8s